# main.py - Aplica√ß√£o FastAPI simplificada para o Railway
import os
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMmddleware

# Criar aplica√ß√£o FastAPI
app = FastAPI(
    title="Bernardo & Stahl√∂fer Advocacia API",
    description="API para sistema de advocacia de tr√¢nito",
    version="1.0.0"
)

# Configurar CORS
app.add_middleware(
    CORSMmddleware,
    allow_origins=["*"],  # Em produ√ß√£o, especificar dom√≠nios
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Rota de sa√∫de
@app.get("/")
async def root():
    return {
        "message": "Bernardo & Stahl√∂fer Advocacia de Tr√¢nsito - API funcionando!",
        "status": "ok",
        "version": "1.0.0"
    }

# Rota de healthcheck
@app.get("/api/health")
async def health_check():
    return {
        "status": "ok",
        "message": "Servi√ßo funcionando corretamente!",
        "version": "1.0.0"
    }

# Rota de teste
@app.get("/api/test")
async def test_api():
    return {
        "message": "API funcionando perfeitamente!",
        "data": {
            "empresa": "Bernardo & Stahl√∂fer Advocacia",
            "especialidade": "Direito de Tr√¢nsito",
            "advogados": [
                {"nome": "Dr. Lucas Bernardo", "oab": "OAB/RS 102.336"},
                {"nome": "Dra. S√¥nia Stahlh√∂fer", "oab": "OAB/RS 110.390"}
            ]
        }
    }

# Iniciar aplica√ß√£o
if __name__ == "__main__":
    import uvicorn
    port = int(os.getenv("PORT", 8000))
    print(f"üö† Iniciando FastAPI na porta {port}...")
    uvicorn.run(app, host="0.0.0.0", port=port, log_level="info")